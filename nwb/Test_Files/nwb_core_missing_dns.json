{"none":
    {"structures":
        {
        "neurodata_version": {
            "data_type": "text",
            "description": "File version string. This will be the name of the format with trailing major, minor and patch numbers (e.g., NWB-0.4.18)"},
        "identifier": {
            "data_type": "text",
            "description": "A unique text identifier for the file"},
        "file_create_date": {
            "data_type": "text",
            "description": "Date and time file was created, UTC (ISO 8601)"},
        "session_start_time": {
            "data_type": "text",
            "description": "Date and time experiment was started was created, UTC (ISO 8601). This serves as the reference time for data in the file. All timestamps in a neurodata file are stored as seconds after this reference time"},
        "session_id": {
            "data_type": "text",
            "description":"Lab-specific ID for the session."},
        "experimenter": {
            "data_type": "text",
            "description": "Name of person who performed the experiment"},
        "publication_info": {
            "data_type": "text",
            "description": "Information about publications related to this data"},
        "institution": {
            "data_type": "text",
             "description": "Institution(s) where experiment was performed"},
        "lab": {
            "data_type": "text",
            "description": "Lab where experiment was performed"},
        "related_publications": {
            "data_type": "text",
             "description": "Publication information, such as PMID, DOI, URL, etc"},
        "notes": {
            "data_type": "text",
            "description": "Notes about the experiment, especially things particular to this experiment"},
        "experiment_description": {
            "data_type": "text",
            "description": "General description of the experiment"},
        "data_collection": {
            "data_type": "text",
            "description": "Notes about data collection and analysis"},
        "stimulus": {
            "data_type": "text",
            "description": "Notes about stimuli, such as how and where presented"},
        "pharmacology": {
            "data_type": "text",
            "description": "Description of drugs used, including how and when they were administered"},
        "surgery": {
            "data_type": "text",
            "description": "Narrative description about surgery/surgeries, including date(s) and who performed surgery"},                                    
        "protocol": {
            "data_type": "text",
            "description": "Experimetnal protocol, if applicable (e.g., IACUC)"},
        "subject_id": {
            "data_type": "text",
            "description": "ID of animal/person used/participating in experiment (lab convention)"},
        "subject": { 
            "data_type": "text",
            "description": "Description of subject and where subject came from (e.g., breeder, if animal)"},                                          
        "species": {
            "data_type": "text",
             "description": "Species of subject"},
        "genotype": {
            "data_type": "text",
            "description": "Genotype of subject"},
        "sex": {
            "data_type": "text",
            "description": "Gender of subject"},                                            
        "age": {
            "data_type": "text",
            "description": "Age of subject"},
        "weight": {
            "data_type": "text",
            "description": "Weight at time of experiment, at time of surgery and at other important times"},
        "virus": {
            "data_type": "text",
            "description": "Information about virus(es) used in experiments, including virus ID, source, date made, injection location, volume, etc"},
        "slices": {
            "data_type": "text",
            "description": "Description of slices, including information about preparation thickness, orientation, temperature and bath solution"},

        "<image>": {
            "data_type": "any", 
            "description": "Documentation image (or movie).  Dimensions left unspecified",
            "attributes": {
                "format": {
                    "data_type": "text",
                    "description": "Format of the image (eg, 'png, 'avi')" },
                "description": { 
                    "data_type": "text",
                    "description": "Descriptive text describing the image" } }
        },

        "<intracellular_electrode>/": {
            "description": "One of possibly many folders describing electrode properties. Name should be informative.",
            "attributes": {
                "description": {
                    "data_type": "text",
                    "description": "Recording description, description of electrode (e.g., whole-cell, sharp, etc)" } },
            "filtering": {
                "data_type": "text",
                "description": "Description of filtering used, including filter type, parameters, fall-off, etc. If this changes between Time-Series then filter descriptions should be stored with the data" },
            "location": {
                "data_type": "text",
                "description": "Area, layer, comments on estimation, stereotaxis coordinates (if in vivo, etc)" },
            "device": {
                "data_type": "text",
                "description": "Name(s) of devices in general/devices" },
            "slice": {
                "data_type": "text",
                "description": "Information about slice used for recording" },
            "seal": {
                "data_type": "text",
                "description": "Information about seal used for recording" },
            "initial_access_resistance": {
                "data_type": "text",
                "description": "Initial access resistance" },
            "resistance": {  
                "data_type": "text",
                "unit": "Ohm",
                "description": "Approximate resistance in ohms" }                            
        },    

        "optophysiology_setup": {
            "data_type": "text",
            "description": "Wavelength(s), indicators, equipment, etc"},   
        "optophysiology_location": {
            "data_type": "text",
            "description": "Sterotaxic coordinates of image center, plus orientation (i.e. which way is 'up')"},   
         "optophysiology_device": {
            "data_type": "text",
            "description": "Name(s) of device(s) in general/devices"},


        "electrode_map": {
            "description": "Physical location of electrode, x,y,z in meters",
            "dimensions": ["electrode_number","xyz"],  
            "data_type": "number",
            "xyz" : { 
                "type": "struct", 
                "components": [
                    { "alias": "x", "unit": "meter" },
                    { "alias": "y", "unit": "meter" },
                    { "alias": "z", "unit": "meter" } ] }
        },
        "impedance": {
            "description": "Impediance of electodes in electrode_map",
            "dimensions": ["electrode_number"],  
            "data_type": "text"
        },
        "electrode_group": {
            "description": "Identification string for probe, shank or tetrode",
            "dimensions": ["electrode_number"],  
            "references": "electrode_group_id",
            "data_type": "text"
        },
        "<electrode_group_id>/": {
            "_description": "One folder for each electrode group.  Name matches group_id",
            "description": {  
                "data_type": "text",
                "description": "Description of probe or shank" },          
            "location": {
                "data_type": "text",
                "description": "Description of probe location" },
            "device": {
                "data_type": "text",
                "description": "Name of device(s) in /general/devices",
                "references": "/general/devices/device_info" }
        },

        "<timestamps>/": {
            "description": "Times that are synced to data",
            "attributes": {
                "description": {"data_type": "text" },
                "comments": {"data_type": "text" },
                "source": {"data_type": "text", "value":"Unspecified source"},
                "ancestry": {"data_type": "text", "value": "TimeSeries"},
                "neurodata_type": {"data_type": "text", "value": "TimeSeries" } },
            "timestamps": {
                "description": "Timestamps for samples stored in data",
                "data_type": "float",
                "unit": "Seconds (all neurodata timestamps are in seconds)",
                "dimensions": ["timeIndex"],
                "semantic_type": "timestamps",
                "attributes": {
                    "rate": { "data_type": "float", "description": "Sampling rate if known"},
                    "interval": {"data_type": "int", "value": 1}
                     } },
            "starting_time?": {
                "description": "In some edge cases it is not practical to store every timestamp (e.g., single-cell patch-clamp data sampled at 200KHz).  For these cases, a field called starting_time is used instead of timestamps. The field starting_time stores the starting time of the timeseries along with the exact sampling rate.",
                "data_type": "float",
                "unit": "second",
                "attributes": {
                    "rate": {
                        "description": "Data sampling or stimulus presentation rate (Hz)",
                        "data_type": "float"},
                    "unit": {
                        "data_type": "text",
                        "value": "Seconds (all neurodata timestamps are in seconds)"} }
            },       
            "num_samples": {
                "description": "Number of samples valid for timestamp",
                "data_type": "int"},
            "data": {
                "attributes": {
                    "conversion": {"data_type": "float" },
                    "unit": {"data_type": "text" },
                    "resolution": {"data_type": "number" } }
                } 
        },
        "<TimeSeries>/": {
            "description": "General purpose time series",
            "merge": ["<timestamps>/"],
            "attributes": {"ancestry": {"data_type": "text", "value": "TimeSeries" } },
            "data": {
                "dimensions": ["timeIndex"],
                "data_type": "number" }
        },
        "<IntervalSeries>/": {
            "description": "Stores intervals of data.",
            "merge": ["<timestamps>/"],
            "attributes": {"ancestry": {"data_type": "text", "value":"TimeSeries,IntervalSeries" }},
            "data": {
                "description": ">0 if interval started, <0 if interval ended",
                "dimensions": ["timeIndex"],
                "data_type": "int",
                "unit": "none",
                "semantic_type": "IntervalSeries" }
        },
        "<PatchClampSeries>/": {
            "description": "Stores stimulus or response current or voltage.",
            "merge": ["<timestamps>/" ],
            "attributes": {"ancestry": {"data_type": "text", "value": "TimeSeries,PatchClampSeries" }},
            "data": {
                "description": "Recorded voltage or current",
                "dimensions": ["timeIndex"],
                "data_type": "number",
                "semantic_type": "PatchClampSeries" },
            "electrode": {   
                "description": "Name of electrode entry in /general/intracellular_ephys",
                "data_type": "text",
                "references": "/general/intracellular_ephys/<intracellular_electrode>"},
            "gain": {
                "description": "Units: Volt/Amp (v-clamp) or Volt/Volt (c-clamp)",
                "data_type": "float"},
            "initial_access_resistance": {
                "description": "Initial access resistance",
                "data_type": "float",
                "unit": "Ohm" },
            "seal": {
                "description": "Seal",
                "data_type": "float",
                "unit": "Ohm" }
        },
        "<VoltageClampStimulusSeries>/": {
            "description": "Aliases to standard PatchClampSeries. Its functionality is to better tag PatchClampSeries for machine (and human) readability of the file.",
            "merge": ["<PatchClampSeries>/" ]             
        },
        "<CurrentClampStimulusSeries>/": {
            "description": "Aliases to standard PatchClampSeries. Its functionality is to better tag PatchClampSeries for machine (and human) readability of the file.",
            "merge": ["<PatchClampSeries>/" ]           
        },
        "<VoltageClampSeries>/": {
            "description": "Stores current data recorded from intracellular voltage-clamp recordings. A corresponding VoltageClampStimulusSeries (stored separately as a stimulus) is used to store the voltage injected. The VoltageClampSeries has all of the datasets of an PatchClampSeries as well as the following:",
            "merge": ["<PatchClampSeries>/" ],
            "capacitance_fast": {
                "description": "Capacitance fast",
                "data_type": "float",
                "unit": "Farad"},
            "capacitance_slow": {
                "description": "Capacitance slow",
                "data_type": "float",
                "unit": "Farad"},
            "resistance_comp_bandwidth": {
                "description": "resistance_comp_bandwidth",
                "data_type": "number",  
                "unit": "Hz"},
            "resistance_comp_correction": {
                "description": "resistance_comp_correction",
                "data_type": "number",   
                "unit": "%"},
            "resistance_comp_prediction": {
                "description": "resistance_comp_prediction",
                "data_type": "number",   
                "unit": "%"},
            "whole_cell_capacitance_comp": {
                "description": "whole_cell_capacitance_comp",
                "data_type": "float",
                "unit": "Farad"},
            "whole_cell_series_resistance_comp": {
                "description": "whole_cell_series_resistance_comp",
                "data_type": "float",
                "unit": "Ohm"}
        },
        "<CurrentClampSeries>/": {
            "description": "Stores voltage data recorded from intracellular current-clamp recordings. A corresponding CurrentClampStimulusSeries (stored separately as a stimulus) is used to store the current injected. The CurrentClampSeries has all of the datasets of an PatchClampSeries as well as the following:",
            "merge": ["<PatchClampSeries>/" ],
            "bias_current": {
                "description": "Bias current",
                "data_type": "float",
                "unit": "Amp"},
            "bridge_balance": {
                "description": "Bridge Balance",
                "data_type": "float",
                "unit": "Ohm"},
            "capacitance_compensation": {
                "description": "Capacitance compensation",
                "data_type": "float",
                "unit": "Farad"}
        },
        "<ElectricalSeries>/": {
            "description": "Acquired voltage data from extracellular recordings.",
            "merge": ["<timestamps>/"],
            "attributes": {"ancestry": {"data_type": "text", "value": "TimeSeries, ElectricalSeries" }},
            "data": {
                "description": "Recorded voltage data",
                "dimensions": ["timeIndex", "channelIndex"], 
                "data_type": "number",
                "unit": "volt",
                "semantic_type": "ElectricalSeries" },
            "electrode_idx": {
                "description": "Indicies to electrodes in general/extracellular_ephys/electrode_map",
                "dimensions": ["channelIndex"],
                "data_type": "int",
                "references": "/general/extracellular_ephys/electrode_map.electrode_number"}
        },
        "<SpikeEventSeries>/": {
            "description": "Stores 'snapshots' of spike events (e.g. threshold crossings).",
            "merge": ["<timestamps>/"],
            "attributes": {"ancestry": {"data_type": "text", "value":"TimeSeries, SpikeEventSeries" }},
            "data": {
                "description": "Spike waveforms",
                "dimensions": ["timeIndex", "channelIndex","sampleIndex"], 
                "data_type": "number",
                "unit": "volt",
                "semantic_type": "SpikeEventSeries" },
            "electrode_idx": {
                "description": "Indicies to electrodes in general/extracellular_ephys/electrode_map",
                "dimensions": ["channelIndex"],
                "data_type": "int",
                "references": "/general/extracellular_ephys/electrode_map.electrode_number" }
        },
        "<ImageSeries>/": {
            "description": "Stores images or path to images on file system",
            "merge": ["<timestamps>/"],
            "attributes": {"ancestry": {"data_type": "text", "value":"TimeSeries,ImageSeries" }},
            "data": {
                "description": "Either binary data containing image or empty",
                "data_type": "number" },
            "format": {
                "description": "Format of image. If this is 'external' then the field external_file contains the path or URL information to that file. For tiff, png, jpg, etc, the binary representation of the image is stored in data. If the format is raw then the fields bit_per_pixel and dimension are used. For raw images, only a single channel is stored (eg, red).",
                "data_type": "text"},
            "external_file?": {
                "description": "Path or URL to external file. Field only present if format=external",
                "data_type": "text"},
            "bits_per_pixel": {
                "description": "Number of bit per image pixel",
                "data_type": "number"},
            "dimension": {
                "description": "Number of pixels on x, y, (and z) axes",
                "data_type": "int",
                "dimensions": ["rank"]}       
        },
        "<OpticalSeries>/": {
            "description": "Image data that is presented or recorded. A stimulus template movie will be stored only as an image.",
            "attributes": {"ancestry": {"data_type":"text", "value":"TimeSeries,ImageSeries,OpticalSeries"}},
            "merge": ["<ImageSeries>/" ],
            "field_of_view": {
                "description": "Width, height and depto of image, or imaged area (meters)",
                "data_type": "float",
                "dimensions" : ["fov"],
                "fov" : { 
                    "type": "structure", 
                    "components": [
                        { "alias": "width", "unit": "meter" },
                        { "alias": "height", "unit": "meter" },
                        { "alias": "depth", "unit": "meter", "optional": "True" } ] }
                },
            "distance": {
                "description": "Distance from camera/monitor to target/eye",
                "data_type": "float"},
            "orientation": {
                "description": "Description of image relative to some reference frame (e.g., which way is up). Must also specify frame of reference." ,
                "data_type": "text" }
        },
        "<TwoPhotonSeries>/": {
            "description": "A special case of optical imaging.",
            "attributes": {
                "ancestry": {
                    "data_type":"text",
                    "value": "TimeSeries,ImageSeries,OpticalSeries,TwoPhotonSeries"}},
            "merge": ["<OpticalSeries>/"],
            "max_voltage": {
                "data_type": "float",
                "unit": "Volt"},
            "min_voltage": {
                "data_type": "float",
                "unit": "Volt"},
            "pmt_gain": {
                "description": "Photomultiplier gain",
                "data_type": "number"},
            "wavelength": {
                "description": "Laser Wavelength, Units: nm or meters",
                "data_type": "number"},        
            "indicator": {
                "description": "Imaging indicator (e.g., GCaMP6s) and response wavelength",
                "data_type": "text"},
            "imaging_depth": {
                "description": "Imaging depth into tissue (i.e., below surface). Units: Meters",
                "unit": "Meter",
                "data_type": "float"},
            "scan_line_rate": {
                "description": "Scan lines per second (Hz)",
                "unit": "Hz",
                "data_type": "number"}       
        },

        "<module>/": {
            "attributes": {
                "interfaces": {"data_type": "text" },
                "source": {"data_type": "text", "description": "Source of data that was processed"},
                "description": {"data_type": "text"},
                "neurodata_type": {"data_type": "text", "value": "Module" } }                  
        },
        "Clustering/": {
            "parent_attributes": {"interfaces": {"data_type": "text", "value":"+Clustering"}},
            "times": {
                "description": "Time of clustered events",
                "dimensions": ["eventIndex"],
                "data_type": "number",
                "unit": "second",
                "semantic_type": "timestamps"},
            "num": {
                "description": "Cluster number of each event",
                "dimensions": ["eventIndex"],
                "data_type": "int"},
            "source": {
                "description": "path to FeatureExtraction module that was the source of the clustered data",
                "data_type": "text"},
            "description": {
                "data_type": "text",
                "description": "Description of clusters or clustering, e.g. cluster 0 is noise, ..."},
            "peak_over_rms": {
                "description": "Maximum ration of waveform peak to RMS on any channel in the cluster",
                "data_type": "float",
                "dimensions": ["num_clusters"]}          
        },
        "EventWaveform/" : {
            "include": {"<SpikeEventSeries>/": {"data": {"semantic_type": "+EventWaveform" } } },
            "parent_attributes": {"interfaces": {"data_type": "text", "value":"+EventWaveform"} }
        },
        "LFP/": {
            "include": {"<ElectricalSeries>/": {"data": {"semantic_type": "+LFP" } } },
            "parent_attributes": {"interfaces": {"data_type":"text", "value":"+LFP"} }
        },
        "UnitTimes/": {
            "description": "Event times of observed units (e.g. cell, synapse, etc.)",
            "parent_attributes": {"interfaces": {"data_type": "text", "value":"+UnitTimes"}},
            "source": {
                "description": "Name, path or description of where unit tims originatd",
                "data_type": "text"},
            "unit_list": {
                "description": "List of units present",
                "data_type": "text",
                "dimensions": ["num_units"],
                "references": "<unit_id>:1-to-1"},
            "<unit_id>/*": {
                "times": {
                    "description": "Spike time for the units",
                    "dimensions": ["eventIndex"],
                    "data_type": "number",
                    "unit": "second",
                    "semantic_type": "timestamps"},
                "unit_description": {
                    "description": "Description of the unit (e.g. cell type)",
                    "data_type": "text"} }
        },
        "FeatureExtraction/" : {
            "parent_attributes": {"interfaces": {"data_type":"text", "value":"+FeatureExtraction"}},
            "features": {
                "description": "Array of features extracted from each event",
                "dimensions": ["eventIndex", "channelIndex", "featureIndex"],
                "data_type": "number"},
            "times": {
                "description": "Time of events that features correspond to",
                "dimensions": ["eventIndex"],
                "data_type": "number",
                "unit": "second",
                "semantic_type": "timestamps"},
            "description": {
                "description": "Description of each feature",
                "dimensions": ["featureIndex"],
                "data_type": "text"},    
            "electrode_idx": {
                "description": "Indicies to electrodes in general/extracellular_ephys/electrode_map",
                "dimensions": ["channelIndex"],
                "data_type": "int",
                "references": "/general/extracellular_ephys/electrode_map.electrode_number"}
        },
        "ImageSegmentation/" : {
            "parent_attributes": {"interfaces": {"data_type":"text", "value":"+ImageSegmentation"}},        
            "<image_plane>/*" : {
                "attributes": {
                    "description": {
                        "data_type": "text",
                        "description": "Description of image plane, recording wavelength, depth, etc"}},
                "<roi_name>/*": {
                    "img_mask_0": {
                        "description": "ROI mask, represented in 2D ([y][x]) intensity image",
                        "data_type": "number",
                        "dimensions": ["numx","numy"]},
                    "pix_mask_0": {
                        "description": "ROI mask, represented as list of pixels (x,y) that compose mask",
                        "data_type": "number",
                        "dimensions": ["2","numPixels"],
                        "attributes": {
                            "weight": {
                                "description": "Weight of each pixel",
                                "data_type": "float_array"
                                },
                            "help": {
                                "description": "<<<need to fill in, not in docs>>>",
                                "data_type": "text"}}},
                    "start_time_0": {
                        "description": "Time when the mask starts to be used",
                        "data_type": "number" }, 
                    "roi_description": {
                        "description": "Description of this ROI",
                        "data_type": "text" }},
                "reference_images/": {
                    "include": {"<ImageSeries>/*": {} }}
            }
        },
        "DfOverF/": {
            "parent_attributes": {"interfaces": {"data_type":"text", "value":"+DfOverF"}},
            "description": "dF/F information about a region of interest (ROI). Storage hierarchy of dF/F should be the same as for segmentation (ie, same names for ROIs and for image planes). DfOverF/",
            "<image_plane>/*": {
                "attributes": {
                    "description": {
                        "data_type": "text",
                        "description": "Description of image plane, recording wavelength, depth, etc"}},
                "<roi_name>/*": {
                    "description": "Name of region of interest",
                    "merge": ["<timestamps>/"],
                    "data": {
                        "description": "dF/F signal",
                        "dimensions": ["timeIndex"],
                        "data_type": "number",
                        "semantic_type": "TimeSeries" },
                    "roi_segments": {
                        "data_type": "text",
                        "description": "<<< Need to fill in, not in docs>>>" },
                    "trial_ids": {
                        "data_type": "int",
                        "description": "<<< Need to fill in, not in docs>>>" }
                }
            }
        },
        "BehavioralEvent/": {
            "include": {"<TimeSeries>/": {"data": {"semantic_type": "+BehavorialEvent" } } },
            "parent_attributes": {"interfaces": {"data_type": "text", "value":"+BehavorialEvent"} }
        },
        "BehavioralEpochs/": {
            "include": {"<IntervalSeries>/": {"data": {"semantic_type": "+BehavorialEpochs" } } },
            "parent_attributes": {"interfaces": {"data_type": "text", "value":"+BehavorialEpochs"} }
        },
        "<epoch>/": {
            "description": "Stores data about sub experiments or trial intervals",
        "attributes": {
            "neurodata_type": {"data_type": "text", "value": "Epoch" } },            
        "description": {
            "data_type": "text" },
        "start_time": {
            "description": "Start time of epoch, in seconds",
            "data_type": "number",
            "unit": "second" },
        "stop_time": {
            "description": "Stop time of epoch, in seconds",
            "data_type": "float",
            "unit": "second" },
        "tags?": {
            "description": "User defined tags that help characterize an epoch",
            "data_type": "text",
            "dimensions": ["num_tags"] },
        "<timeseries_X>/*" : {
            "description": "Reference for zero or more time series that overlap with epoch",
            "idx_start": {
                "description": "First index in timeseries::data that overlaps with this epoch",
                "data_type": "int" },
            "count": {
                "description": "Number of entries in TimeSeries::data that overlaps with this epoch",
                "data_type": "int" },
            "timeseries/": {
                "description": "Link to timeseries.  Target timeseries can be anywhere in the file" } }
        }
        },
    "locations":
        {
            "/": [
                "neurodata_version!",
                "identifier!",
                "file_create_date!",
                "session_start_time"
            ],
            "/epochs": [
                "<epoch>/*"
            ],
            "/general": [
                "session_id!",
                "experimenter!",
                "publication_info",
                "publication_info",
                "institution",
                "lab",
                "related_publications",
                "notes",
                "experiment_description",
                "data_collection",
                "stimulus",
                "pharmacology",
                "surgery",
                "protocol",
                "subject_id",
                "subject",
                "species",
                "genotype",
                "sex",
                "age",
                "weight",
                "virus",
                "slices",
                "__custom"
            ],
            "/general/intracellular_ephys": [
                "<intracellular_electrode>/*"
            ],
            "/general/extracellular_ephys": [
                "electrode_map",
                "impedance",
                "electrode_group",
                "<electrode_group_id>/*"
            ],
            "/general/optophysiology": [
                "optophysiology_setup",
                "optophysiology_location",
                "optophysiology_device"
            ],
            "/acquisition/images": [
                "<image>*"
            ],
            "/acquisition/timeseries": [
                "<TimeSeries>/*",
                "<PatchClampSeries>/*",
                "<VoltageClampStimulusSeries>/*",
                "<CurrentClampStimulusSeries>/*",
                "<VoltageClampSeries>/*",
                "<CurrentClampSeries>/*",
                "<ElectricalSeries>/*",
                "<SpikeEventSeries>/*",
                "<OpticalSeries>/*",
                "<TwoPhotonSeries>/*"
            ],
            "/stimulus/presentation": [
                "<TimeSeries>/*",
                "<ElectricalSeries>/*",
                "<ImageSeries>/*",
                "<VoltageClampStimulusSeries>/*",
                "<CurrentClampStimulusSeries>/*"
            ],
            "/stimulus/templates": [
                "<TimeSeries>/*",
                "<VoltageClampStimulusSeries>/*",
                "<CurrentClampStimulusSeries>/*"
            ],
            "/processing": [
                "<module>/*"
            ],
            "<module>/": [
                "Clustering/",
                "LFP/",
                "UnitTimes/",
                "FeatureExtraction/",
                "EventWaveform/",
                "BehavioralEvent/",
                "BehavioralEpochs/",
                "ImageSegmentation/",
                "DfOverF/"
            ]
        }
    } 
}
